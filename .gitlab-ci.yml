image: docker:stable

services:
- docker:dind

stages:
  - build
  - test

dmd-dub: &dub
  variables:
    COMPILER: dmd
  stage: build
  script: docker run -v$(pwd):/source ohboi/mini$COMPILER bash -c "
    dub build -b debug             &&
    dub build -b release           &&
    dub build -b debug   -c static &&
    dub build -b release -c static"

ldc-dub:
  <<: *dub
  variables:
    COMPILER: ldc

dmd: &build
  variables:
    COMPILER: dmd
    STATIC: "false"
  stage: build
  script: docker run -v$(pwd):/source ohboi/mini$COMPILER bash -c "
    apt update -qq 2>&1 > /dev/null                     &&
    apt install -qq -y --no-install-recommends make git &&
    dub fetch reggae                                    &&
    dub run reggae --
      --dc=$(if [[ "$COMPILER" = "ldc" ]]; then echo ldmd2; else echo $COMPILER; fi)
      --backend=make
      -d STATIC=$STATIC                                 &&
    make"
  artifacts:
    paths:
      - goinsu

dmd-static:
  <<: *build
  variables:
    COMPILER: dmd
    STATIC: "true"

ldc:
  <<: *build
  variables:
    COMPILER: ldc
    STATIC: "false"

ldc-static:
  <<: *build
  variables:
    COMPILER: ldc
    STATIC: "true"

dmd-test: &test
  stage: test
  script: docker build -f .ci/Dockerfile.test .
  dependencies:
    - dmd

dmd-static-test: &static-test
  stage: test
  script: sed -i "1s/glibc/musl/" .ci/Dockerfile.test &&
    docker build -f .ci/Dockerfile.test .
  dependencies:
    - dmd-static

ldc-test:
  <<: *test
  dependencies:
    - ldc
  
ldc-static-test:
  <<: *static-test
  dependencies:
    - ldc-static